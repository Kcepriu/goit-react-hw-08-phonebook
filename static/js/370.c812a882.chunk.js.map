{"version":3,"file":"static/js/370.c812a882.chunk.js","mappings":"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","sources":["reduxe/selectors.js","components/AddContact/AddContact.styled.js","components/AddContact/AddContact.js","components/ListContacts/ListContacts.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/EditContact/EditContact.styled.js","components/EditContact/EditContact.js","components/ListContacts/ListContacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.request;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  // Функція перетворювач\n  (contacts, filter) => {\n    return contacts.filter(element =>\n      element.name.toUpperCase().includes(filter.toUpperCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 320px;\n  gap: 15px;\n  margin-bottom: 20px; ;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  /* margin-bottom: 10px; */\n`;\n\nexport const Button = styled.button`\n  max-width: 100px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'reduxe/selectors';\nimport { addContacts } from 'reduxe/operation';\nimport { Form, Label, Button } from './AddContact.styled';\n\nconst findContactByName = (contacts, userName) => {\n  const textFilter = userName.toUpperCase();\n  return contacts.find(element => element.name.toUpperCase() === textFilter);\n};\n\nconst AddContact = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatcher = useDispatch();\n\n  const addnewContact = (contacts, newContact) => {\n    if (findContactByName(contacts, newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    dispatcher(addContacts(newContact));\n\n    return true;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const newContact = {\n      name: form.elements.name.value,\n      phone: form.elements.phone.value,\n    };\n\n    addnewContact(contacts, newContact) && form.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"userName\">\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Enter user name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            name=\"name\"\n          />\n        </Label>\n\n        <Label htmlFor=\"numberPhone\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default AddContact;\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const WrapContact = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { WrapContact } from './Contact.styled';\nimport { editContact } from 'reduxe/sliceContacts';\nimport { deleteContacts } from 'reduxe/operation';\n\nconst Contact = ({ contact }) => {\n  const dispatcher = useDispatch();\n\n  const handlerDelete = () => dispatcher(deleteContacts(contact.id));\n\n  const handlerEdit = () => dispatcher(editContact(contact.id));\n\n  return (\n    <WrapContact>\n      {contact.name}: {contact.phone}\n      <button type=\"button\" onClick={handlerDelete}>\n        Delete\n      </button>\n      <button type=\"button\" onClick={handlerEdit}>\n        Edit\n      </button>\n    </WrapContact>\n  );\n};\n\nContact.propType = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    edit: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  border: 1px solid gray;\n  max-width: 100%;\n  /* flex-direction: column; */\n  /* max-width: 320px; */\n  gap: 15px;\n\n  /* margin-bottom: 20px; ; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  /* margin-bottom: 10px; */\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Label } from './EditContact.styled';\nimport { editContact } from 'reduxe/sliceContacts';\nimport { selectContacts } from 'reduxe/selectors';\nimport { changeContacts } from 'reduxe/operation';\n\nconst findContactByNameAndId = (contacts, userName, id) => {\n  const textFilter = userName.toUpperCase();\n  return contacts.find(\n    element => element.name.toUpperCase() === textFilter && element.id !== id\n  );\n};\n\nconst EditContact = ({ contact }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatcher = useDispatch();\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.phone);\n\n  const handlerSave = event => {\n    event.preventDefault();\n\n    if (findContactByNameAndId(contacts, newName, contact.id)) {\n      alert(`${newName} is already in contacts`);\n      return;\n    }\n\n    // dispatcher(editContact(contact.id));\n    // TODO save to API\n    dispatcher(\n      changeContacts({\n        id: contact.id,\n        name: newName,\n        phone: newNumber,\n      })\n    );\n  };\n\n  const onChangeName = event => {\n    setNewName(event.target.value);\n  };\n\n  const onChangeNumber = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handlerCancel = () => {\n    dispatcher(editContact(contact.id));\n  };\n\n  return (\n    <Form onSubmit={handlerSave}>\n      <Label htmlFor=\"userName\">\n        New name:\n        <input\n          type=\"text\"\n          placeholder=\"Enter user name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          name=\"name\"\n          value={newName}\n          onChange={onChangeName}\n        />\n      </Label>\n\n      <Label htmlFor=\"numberPhone\">\n        New number:\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={newNumber}\n          onChange={onChangeNumber}\n        />\n      </Label>\n      <button type=\"submit\">Save</button>\n      <button type=\"button\" onClick={handlerCancel}>\n        Cancel\n      </button>\n    </Form>\n  );\n};\n\nEditContact.propType = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    edit: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default EditContact;\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'reduxe/selectors';\n\nimport { ContactList } from './ListContacts.styled';\nimport Contact from 'components/Contact/Contact';\nimport EditContact from 'components/EditContact/EditContact';\n\nconst ListContacts = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactList>\n      {visibleContacts.map(contact => {\n        if (!contact.edit) {\n          return <Contact key={contact.id} contact={contact} />;\n        } else {\n          return <EditContact key={contact.id} contact={contact} />;\n        }\n      })}\n    </ContactList>\n  );\n};\n\nexport default ListContacts;\n","import styled from 'styled-components';\n\nexport const TitleFilter = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const InputFilter = styled.input`\n  margin-bottom: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'reduxe/sliceFilter';\nimport { TitleFilter, InputFilter } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatcher = useDispatch();\n\n  const handlerChangeFilter = event => {\n    dispatcher(changeFilter(event.currentTarget.value));\n  };\n\n  return (\n    <>\n      <TitleFilter>Find contact by name</TitleFilter>\n      <InputFilter type=\"text\" name=\"filter\" onChange={handlerChangeFilter} />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TitlePhonebook = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Container = styled.div`\n  margin-top: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport AddContact from 'components/AddContact/AddContact';\nimport ListContacts from 'components/ListContacts/ListContacts';\nimport Filter from 'components/Filter/Filter';\nimport Spinner from 'components/Spinner/Spinner';\n\nimport { TitlePhonebook, TitleContacts, Container } from './Contacts.styled';\nimport { selectContacts, selectError, selectIsLoading } from 'reduxe/selectors';\nimport { fetchAllContacts } from 'reduxe/operation';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   if (!error) alert('ERROR services');\n  // }, [error]);\n\n  return (\n    <Container>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <AddContact />\n\n      {contacts.length > 0 && (\n        <>\n          <Filter />\n          <TitleContacts>Contacts</TitleContacts>\n          <ListContacts />\n        </>\n      )}\n\n      {isLoading && !error && <Spinner />}\n    </Container>\n  );\n};\n\nexport default Contacts;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","request","element","name","toUpperCase","includes","Form","styled","Label","Button","useSelector","dispatcher","useDispatch","onSubmit","event","preventDefault","form","target","newContact","elements","value","phone","userName","textFilter","find","findContactByName","addContacts","alert","addnewContact","reset","htmlFor","type","placeholder","pattern","required","title","ContactList","WrapContact","Contact","contact","onClick","deleteContacts","id","editContact","propType","PropTypes","edit","isRequired","EditContact","useState","newName","setNewName","newNumber","setNewNumber","findContactByNameAndId","changeContacts","onChange","visibleContacts","map","TitleFilter","InputFilter","changeFilter","currentTarget","TitlePhonebook","TitleContacts","Container","dispatch","useEffect","fetchAllContacts","length","Spinner","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}